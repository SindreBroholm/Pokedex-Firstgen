!function(n){var t={};function e(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return n[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var i in n)e.d(o,i,function(t){return n[t]}.bind(null,i));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(n,t,e){"use strict";e.r(t);let o=document.getElementById("main"),i=0;function r(n){let t=n.url.split("/")[6];return`\n    <div class="pokemonCard" id="${t}">\n    <img src="${`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white/animated/${t}.gif`}">\n    <h3>${n.name}</h3>\n    </div>\n    `}function u(n){fetchPokemon(n).then((function(n){let t=n.types.map((function(n){return`<span>${n.type.name}</span>`})).join(", "),e=n.abilities.map((function(n){return`<span>${n.ability.name}</span>`})).join(", "),r=n.stats.map((function(n){return`\n            <li>${n.stat.name}: ${n.base_stat}</li>\n        `})).join("");o.innerHTML=`\n        <h1>${n.name}</h1>\n        <button id="back">Back</button>\n        <div>\n        <img src="${n.sprites.other.dream_world.front_default}">\n        </div>\n        <div class="pokemonInfo">\n            <div>Type: ${t}</div>\n            <div>Abilities: ${e} </div>\n            <div><h3>Stats</h3>\n                <ul>\n                    ${r}\n                </ul>\n            </div>\n        <p></p>\n        </div>\n\n    `,document.getElementById("back").addEventListener("click",(function(){console.log("currentPage:",i),c(i,20)}))}))}function c(n,t){o.innerHTML="\n    <h3>Loading Pokemons...</h3>\n",function(n,t){console.log(n);let e=n*t,o=Math.min(20,151-e);return fetch(`https://pokeapi.co/api/v2/pokemon?limit=${o}&offset=${e}`).then((function(n){return n.json()})).then((function(n){return n.results}))}(n,t).then((function(n){o.innerHTML=function(n){return`\n        <h1>My Pokemons</h1>\n        <button id="prevButton">Prev</button>\n        <button id="nextButton">Next</button>\n        <div id="pokemonList">\n        ${n.map(r).join("")}\n        </div>\n        `}(n);let e=document.getElementById("prevButton");i>0?e.addEventListener("click",(function(){i--,c(i,t)})):e.style.display="none";let a=document.getElementById("nextButton");(i+1)*t<=151?a.addEventListener("click",(function(){i++,c(i,t)})):a.style.display="none",document.getElementById("pokemonList").childNodes.forEach((function(n){n.addEventListener("click",(function(n){u(n.currentTarget.id)}))}))})).catch((function(n){o.innerHTML=function(n){return`\n        <h3>Unable to get pokemons</h3>\n        <p>${n.message}</p>\n        <p>Lost internett?</p>\n    `}(n)}))}o.innerHTML=' \n<h1>My Pokedex</h1>\n<button id="view">View pokemons</button>\n',document.getElementById("view").addEventListener("click",(function(){c(i,20)}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,